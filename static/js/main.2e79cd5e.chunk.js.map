{"version":3,"sources":["materials.js","compositions/NonBranchingLine.js","compositions/BranchingLine.js","compositions/TextFromFont.js","compositions/TextInQuickSuccession.js","hooks/useInterval.js","compositions/OrbitControls.js","compositions/Background.js","compositions/TrackballControls.js","scenes/Tree.js","index.js","App.js"],"names":["wireframe","MeshBasicMaterial","color","opacity","basicBlack","MeshNormalMaterial","flatShading","MeshPhongMaterial","shininess","specular","MeshStandardMaterial","metalness","roughness","basicGray","NonBranchingLine","_ref","position","material","_ref$catmullRom","catmullRom","_ref$vertices","vertices","length","points","curve","CatmullRomCurve3","undefined","arcLengthDivisions","console","log","getPoints","geometry","Geometry","forEach","vertice","push","react_default","a","createElement","getRandomVertices","_ref$length","_ref$stepSize","stepSize","_ref$branchProbabilit","branchProbability","_ref$maxDepth","maxDepth","_ref$depthAlongTree","depthAlongTree","_ref$depthAlongBranch","depthAlongBranch","_ref$stepSizeDecay","stepSizeDecay","_ref$branchProbabilit2","branchProbabilityDecay","arguments","start","Vector3","verts","Array","from","reduce","previous","x","i","nextVertex","clone","add","Math","random","normalize","multiplyScalar","getRandomNonBranchingVertices","line","potentiallyBranchingVertex","branchAmount","concat","Object","toConsumableArray","map","round","max","BranchingLine","_ref2","_ref2$depthAlongTree","_ref2$Vertex","Vertex","_ref3","materials","attach","args","filter","vertex","isArray","groups","lastVertexOnMainBranch","key","all","Text","rotation","onClick","_ref$material","_ref$font","font","text","_ref$size","size","_ref$height","height","_ref$curveSegments","curveSegments","textGeometryProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","textGeometry","setTextGeometry","useEffect","FontLoader","load","fontInstance","TextGeometry","objectSpread","texts","_ref$interval","interval","textFromFontProps","index","setIndex","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","assign","OrbitControlsComponent","_ref$damping","damping","_ref$minAzimuthAngle","minAzimuthAngle","Infinity","_ref$maxAzimuthAngle","maxAzimuthAngle","_ref$autoRotateSpeed","autoRotateSpeed","_ref$enablePan","enablePan","_ref$enableRotate","enableRotate","_ref$enableZoom","enableZoom","_useThree","useThree","canvas","camera","controls","ThreeOrbitControls","autoRotate","dispose","useRender","update","_ref$color","scene","gl","setPixelRatio","window","devicePixelRatio","background","Color","_ref$zoomSpeed","zoomSpeed","_ref$panSpeed","panSpeed","_ref$rotateSpeed","rotateSpeed","render","ThreeTrackballControls","noZoom","noPan","staticMoving","dynamicDampingFactor","keys","subjects","toLowerCase","roles","Tree","PerspectiveCamera","innerWidth","innerHeight","set","lookAt","dist","TrackballControls_OrbitControlsComponent","Background_OrbitControlsComponent","TextInQuickSuccession_Text","floor","join","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2e79cd5e.chunk.js","sourcesContent":["import {\n\tMeshBasicMaterial,\n\tMeshStandardMaterial,\n\tMeshNormalMaterial,\n\tSphericalReflectionMapping,\n\tMeshPhongMaterial,\n\tMeshToonMaterial,\n\tDoubleSide\n} from 'three';\n\nconst globalFlatShading = false,\n\tglobalWireframe = false;\n\nexport const wireframe = new MeshBasicMaterial({\n\twireframe: true,\n\tcolor: 0,\n\topacity: 0.5\n});\n\nexport const normal = new MeshNormalMaterial({\n\tflatShading: globalFlatShading,\n\twireframe: globalWireframe\n});\n\nexport const whiteMaterial = new MeshPhongMaterial({\n\tcolor: 0xeeeeee,\n\tflatShading: globalFlatShading,\n\tshininess: 230,\n\t// side: DoubleSide,\n\twireframe: globalWireframe\n});\n\nexport const softMaterial = new MeshPhongMaterial({\n\tcolor: 0xaaaaaa,\n\tflatShading: globalFlatShading,\n\tshininess: 0,\n\t// side: DoubleSide,\n\twireframe: globalWireframe\n});\n\nexport const demoMaterial = new MeshPhongMaterial({\n\tcolor: 'rgb(20, 20, 80)',\n\tflatShading: globalFlatShading,\n\tshininess: 130,\n\tspecular: 'yellow',\n\twireframe: globalWireframe,\n});\n\nexport const redMaterial = new MeshStandardMaterial({\n\tcolor: 0xff0000,\n\tflatShading: globalFlatShading,\n\tmetalness: 0.5,\n\troughness: 0.2,\n\twireframe: globalWireframe\n});\n\nexport const basicWhite = new MeshBasicMaterial({\n\tcolor: 0xffffff,\n\twireframe: true\n})\nexport const basicBlack = new MeshBasicMaterial({\n\tcolor: 0x000000\n})\nexport const basicGray = new MeshBasicMaterial({\n\tcolor: 0x000000,\n\topacity: 0.25\n})","import React from 'react';\n\nimport { Geometry, Vector3, CatmullRomCurve3 } from 'three';\n\nexport function getRandomVertices (\n\tlength = 10,\n\tstepSize = 3\n) {\n\tconst start = new Vector3(0, 0, 0);\n\tconst verts = [start];\n\tArray.from(new Array(length))\n\t\t.reduce((previous, x, i) => {\n\t\t\tconst nextVertex = previous.clone().add(new Vector3(\n\t\t\t\tMath.random() * 2 - 1,\n\t\t\t\tMath.random() * 2 - 1,\n\t\t\t\tMath.random() * 2 - 1\n\t\t\t).normalize().multiplyScalar(stepSize));\n\t\t\tverts.push(nextVertex);\n\t\t\treturn nextVertex;\n\t\t}, start);\n\treturn verts;\n}\n\nexport default function NonBranchingLine ({\n\tposition,\n\tmaterial,\n\tcatmullRom = false,\n\tvertices = []\n}) {\n\n\tif (vertices.length < 2) {\n\t\t// throw new Error(vertices.length + ' vertices is too few for a line');\n\t\t// whatever.\n\t\treturn null;\n\t}\n\n\tlet points = null;\n\tif (catmullRom) {\n\t\tvar curve = new CatmullRomCurve3(vertices, false, undefined, 30);\n\t\tcurve.arcLengthDivisions = 10;\n\t\tconsole.log(curve);\n\t\tpoints = curve.getPoints(1000);\n\t}\n\tconst geometry = new Geometry();\n\n\t(points || vertices).forEach(vertice => geometry.vertices.push(vertice));\n\n\treturn <group position={ position }>\n\t\t{/* <mesh>\n\t\t\t<sphereBufferGeometry args={[70, 90, 90]} attach='geometry' />\n\t\t\t<meshBasicMaterial wireframe color={0xeeeeee} attach='material' />\n\t\t</mesh> */}\n\t\t<line geometry={geometry} material={ material } />\n\t</group>;\n}","import React from 'react';\nimport * as materials from '../materials';\nimport NonBranchingLine, { getRandomVertices as getRandomNonBranchingVertices } from '../compositions/NonBranchingLine';\nimport { Geometry, Vector3 } from 'three';\nexport function getRandomVertices ({\n\tlength = 50,\n\tstepSize = 3,\n\tbranchProbability = 0.01,\n\tmaxDepth = 5,\n\tdepthAlongTree = 0,\n\tdepthAlongBranch = 0,\n\tstepSizeDecay = 0.5,\n\tbranchProbabilityDecay = 0.2\n}) {\n\tconsole.log('BranchingLine getRandomVertices', 'L:' + length, 'S:' + stepSize, 'p:' + branchProbability, 'D:' + depthAlongTree);\n\treturn getRandomNonBranchingVertices(length, stepSize)\n\t\t.reduce((line, potentiallyBranchingVertex, i) => {\n\t\t\tlet branchAmount = 0;\n\t\t\twhile (\n\t\t\t\tdepthAlongTree < maxDepth &&\n\t\t\t\tbranchAmount < 100 &&\n\t\t\t\tMath.random() <= branchProbability\n\t\t\t) {\n\t\t\t\tbranchAmount++;\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\t...line,\n\t\t\t\tpotentiallyBranchingVertex,\n\t\t\t\t...(Array.from(new Array(branchAmount))\n\t\t\t\t\t.map(() => getRandomVertices({\n\t\t\t\t\t\tlength: Math.round(Math.max(0, length - depthAlongBranch) * 0.5),\n\t\t\t\t\t\tstepSize: stepSize * stepSizeDecay,\n\t\t\t\t\t\tbranchProbability: branchProbability * branchProbabilityDecay,\n\t\t\t\t\t\tmaxDepth : maxDepth,\n\t\t\t\t\t\tdepthAlongTree: depthAlongTree + 1,\n\t\t\t\t\t\tdepthAlongBranch: depthAlongBranch,\n\t\t\t\t\t\tstepSizeDecay: stepSizeDecay,\n\t\t\t\t\t\tbranchProbabilityDecay: branchProbabilityDecay\n\t\t\t\t\t})))\n\t\t\t];\n\t\t}, []);\n}\n\nexport default function BranchingLine ({\n\tposition,\n\tmaterial,\n\tvertices,\n\tcatmullRom,\n\tdepthAlongTree = 0,\n\tVertex = ({ position, depthAlongBranch, depthAlongTree }) => <mesh position={position} material={materials.wireframe}>\n\t\t<tetrahedronBufferGeometry attach=\"geometry\" args={[0.05 + depthAlongTree * 0.3 + depthAlongBranch * 0.6]} />\n\t</mesh>\n}) {\n\tconst geometry = new Geometry();\n\tvertices\n\t\t.filter(vertex => !Array.isArray(vertex))\n\t\t.forEach(vertex => geometry.vertices.push(vertex));\n\n\tconst groups = [];\n\tvertices.reduce((lastVertexOnMainBranch, vertex, i) => {\n\t\tif (Array.isArray(vertex)) {\n\t\t\tgroups.push(<BranchingLine key={i} depthAlongTree={ depthAlongTree } vertices={ vertex } position={lastVertexOnMainBranch} material={material} Vertex={Vertex} />);\n\t\t\treturn lastVertexOnMainBranch;\n\t\t}\n\t\treturn vertex;\n\t});\n\n\n\treturn <group position={ position }>\n\t\t<NonBranchingLine catmullRom={ catmullRom } vertices={ vertices.filter(vertex => !Array.isArray(vertex)) } material={materials.basicGray} />\n\t\t{ vertices\n\t\t\t.filter(vertex => !Array.isArray(vertex))\n\t\t\t.map((vertex, i, all) => <Vertex key={i} position={vertex} depthAlongTree={ depthAlongTree } depthAlongBranch={i / all.length}/>)\n\t\t}\n\n\t\t{ groups }\n\t</group>;\n}","import React, { useEffect, useState } from 'react';\nimport {\n\tTextGeometry,\n\tFontLoader\n} from 'three';\n\nimport * as materials from '../materials';\n\nexport default function Text({\n\tposition,\n\trotation,\n\tonClick,\n\tmaterial = materials.wireframe,\n\tfont = '/fonts/helvetiker_regular.typeface.json',\n\ttext,\n\tsize = 3,\n\theight = 0.2,\n\tcurveSegments = 6,\n\t...textGeometryProps\n}) {\n\tconst [textGeometry, setTextGeometry] = useState(null);\n\n\tuseEffect(() => new FontLoader().load(font, (fontInstance) => {\n\t\tsetTextGeometry(new TextGeometry(text, {\n\t\t\tfont: fontInstance,\n\t\t\tsize,\n\t\t\theight,\n\t\t\tcurveSegments,\n\t\t\t...textGeometryProps\n\t\t}));\n\t}), [font, text]);\n\n\treturn textGeometry ?\n\t\t<mesh position={position} rotation={rotation} material={ material } geometry={textGeometry} onClick={onClick} /> :\n\t\tnull;\n}\n","import React, { useState } from 'react';\n\nimport useInterval from '../hooks/useInterval';\n\nimport TextFromFont from './TextFromFont';\n\nexport default function Text({\n\ttexts,\n\tinterval = 50,\n\t...textFromFontProps\n}) {\n\tconst [index, setIndex] = useState(0);\n\n\tuseInterval(() => setIndex((index + 1) % texts.length), interval);\n\n\treturn <TextFromFont {...textFromFontProps} text={texts[index]} />;\n}\n","import { useEffect, useRef } from 'react';\n\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nexport default function useInterval(callback, delay) {\n\tconst savedCallback = useRef();\n\n\t// Remember the latest callback.\n\tuseEffect(() => {\n\t  savedCallback.current = callback;\n\t}, [callback]);\n\n\t// Set up the interval.\n\tuseEffect(() => {\n\t  function tick() {\n\t\tsavedCallback.current();\n\t  }\n\t  if (delay !== null) {\n\t\tlet id = setInterval(tick, delay);\n\t\treturn () => clearInterval(id);\n\t  }\n\t}, [delay]);\n  }\n","import { useEffect } from 'react';\nimport ThreeOrbitControls from 'three-orbitcontrols';\nimport {\n\tuseThree,\n\tuseRender\n} from 'react-three-fiber';\n\n\nexport default function OrbitControlsComponent ({\n\tdamping = 0.2,\n\tminAzimuthAngle = -Infinity,\n\tmaxAzimuthAngle = Infinity,\n\tautoRotateSpeed = false,\n\tenablePan = true,\n\tenableRotate = true,\n\tenableZoom = true\n}) {\n\tconst {\n\t\tcanvas,\n\t\tcamera\n\t} = useThree();\n\n\tlet controls = null;\n\n\tuseEffect(() => {\n\t\tconsole.log('-- new ThreeOrbitControls');\n\t\tcontrols = new ThreeOrbitControls(camera, canvas);\n\t\tcontrols.damping = damping;\n\t\tcontrols.minAzimuthAngle = minAzimuthAngle;\n\t\tcontrols.maxAzimuthAngle = maxAzimuthAngle;\n\t\tcontrols.enablePan = enablePan;\n\t\tcontrols.enableRotate = enableRotate;\n\t\tcontrols.enableZoom = enableZoom;\n\n\t\tcontrols.autoRotate = !!autoRotateSpeed;\n\t\tcontrols.autoRotateSpeed = autoRotateSpeed;\n\t\t// scene.background = new Color(0x000000);\n\t\treturn () => {\n\t\t\tconsole.log('-- dispose ThreeOrbitControls');\n\t\t\tcontrols.dispose();\n\t\t\tcontrols = null;\n\t\t}\n\t}, [camera, canvas]);\n\n\tuseRender(() => {\n\t\tif (!controls) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!!autoRotateSpeed) {\n\t\t\tcontrols.update();\n\t\t}\n\t});\n\n\treturn null;\n}\n","import { useEffect } from 'react';\nimport {\n\tColor\n} from 'three';\nimport {\n\tuseThree,\n\tuseRender\n} from 'react-three-fiber';\n\n\nexport default function OrbitControlsComponent ({\n\tcolor = 0x000000\n}) {\n\tconst {\n\t\tscene,\n\t\tgl\n\t} = useThree();\n\n\tuseEffect(() => {\n\t\tgl.setPixelRatio(window.devicePixelRatio ? window.devicePixelRatio : 1);\n\t\tscene.background = new Color(color);\n\t}, [color]);\n\n\treturn null;\n}\n","import { useEffect } from 'react';\nimport ThreeTrackballControls from 'three-trackballcontrols';\nimport {\n\tuseThree,\n\tuseRender\n} from 'react-three-fiber';\n\n\nexport default function OrbitControlsComponent ({\n\tdamping = 0.2,\n\tzoomSpeed = 1.2,\n\tpanSpeed = 0.8,\n\trotateSpeed = 16\n}) {\n\tconst {\n\t\tcanvas,\n\t\tcamera,\n\t\trender\n\t} = useThree();\n\n\tlet controls = null;\n\n\tuseEffect(() => {\n\t\tconsole.log('-- new ThreeTrackballControls');\n\t\tcontrols = new ThreeTrackballControls(camera, canvas);\n\n\t\tcontrols.rotateSpeed = rotateSpeed;\n\t\tcontrols.zoomSpeed = zoomSpeed;\n\t\tcontrols.panSpeed = panSpeed;\n\n\t\tcontrols.noZoom = !zoomSpeed;\n\t\tcontrols.noPan = !panSpeed;\n\n\t\tcontrols.staticMoving = true;\n\t\tcontrols.dynamicDampingFactor = damping;\n\n\t\tcontrols.keys = [\n\t\t\t65, // key A\n\t\t\t83, // key S\n\t\t\t68 // key D\n\t\t];\n\t\t// controls.addEventListener( 'change', render );\n\t\t// scene.background = new Color(0x000000);\n\n\t\treturn () => {\n\t\t\tconsole.log('-- dispose ThreeTrackballControls');\n\t\t\tcontrols.dispose();\n\t\t\tcontrols = null;\n\t\t}\n\t}, [camera, canvas]);\n\n\tuseRender(() => {\n\t\tif (!controls) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontrols.update();\n\t});\n\n\n\n\treturn null;\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport {\n\tPerspectiveCamera,\n\tVector3,\n\tColor,\n\tSphereBufferGeometry,\n\tPlaneGeometry,\n\tMeshPhongMaterial,\n\tTextGeometry,\n\tFontLoader\n} from 'three';\nimport {\n\tCanvas,\n\tuseRender,\n\tuseThree\n} from 'react-three-fiber';\n\nimport * as materials from '../materials';\n\nimport NonBranchingLine, { getRandomVertices as x } from '../compositions/NonBranchingLine';\nimport BranchingLine, { getRandomVertices } from '../compositions/BranchingLine';\nimport TextFromFont from '../compositions/TextFromFont';\nimport TextInQuickSuccession from '../compositions/TextInQuickSuccession';\nimport OrbitControls from '../compositions/OrbitControls';\nimport Background from '../compositions/Background';\nimport TrackballControls from '../compositions/TrackballControls';\n\nconst subjects = [\n\t'web', 'responsive', 'interaction', 'tech', 'schema', 'nodejs', 'full-stack', 'intergalactic',\n\t'usability', 'experience', 'multi-disciplinary', 'open-source', 'frontend', 'art', 'devops', 'graphic',\n\t'software', 'creative', 'javascript', 'pixel', 'internet', 'communications', 'app', 'React', 'NodeJS', 'XML',\n\t'XQuery'\n].map(x => x.toLowerCase());\n\nconst roles = [\n\t'developer', 'designer', 'enthousiast', 'guru', 'ninja', 'wizard', 'harry', 'programmer', 'engineer',\n\t'professional', 'architect', 'evangelist', 'strategist', 'consultant', 'technician', 'master', 'hacker',\n\t'guy', 'person', 'buddy', 'pusher'\n];\n\n\nexport default function Tree () {\n\tconst camera = new PerspectiveCamera(\n\t\t70,\n\t\twindow.innerWidth / window.innerHeight,\n\t\t1,\n\t\t1000);\n\tcamera.position.set(16, -16, 60);\n\tcamera.lookAt(new Vector3(0, 0, 0));\n\n\treturn <Canvas camera={ camera }>\n\t\t<OrbitControls\n\t\t\tenablePan={false}\n\t\t\tenableRotate={false}\n\t\t\tenableZoom={false}\n\t\t\tautoRotateSpeed={ 0.2 }\n\t\t/>\n\t\t<TrackballControls panSpeed={0}/>\n\t\t<Background color={0xFCFCFC} />\n\n\t\t{ Array.from(new Array(5)).map((x, i) => <BranchingLine\n\t\t\tkey={i}\n\t\t\tvertices={getRandomVertices({\n\t\t\t\tlength: 30 + Math.round(100 * Math.random()),\n\t\t\t\tstepSize: 3 + 4 * Math.random(),\n\t\t\t\tmaxDepth: 10\n\t\t\t})}\n\t\t\tmaterial={materials.basicBlack}\n\t\t\t// Vertex={() => null}\n\t\t/>)}\n\n\t\t<group position={[-14, 0, 0]}>\n\t\t\t<TextFromFont text='wybe minnebo' material={ materials.basicBlack } position={[0, 0, 0]} />\n\t\t\t<TextInQuickSuccession\n\t\t\t\ttexts={Array.from(new Array(300)).map(() => [\n\t\t\t\t\tsubjects[Math.floor(Math.random() * subjects.length)],\n\t\t\t\t\troles[Math.floor(Math.random() * roles.length)],\n\t\t\t\t].join(' '))}\n\t\t\t\tmaterial={ materials.basicBlack }\n\t\t\t\tposition={[0, -2, 0]}\n\t\t\t\tsize={1}\n\t\t\t/>\n\t\t\t<TextFromFont\n\t\t\t\ttext={'and shenanigans'}\n\t\t\t\tmaterial={ materials.basicBlack }\n\t\t\t\tposition={[0, -4, 0]}\n\t\t\t\tsize={1}\n\t\t\t/>\n\t\t</group>\n\t</Canvas>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// registerServiceWorker();\n","import React, { useState } from 'react';\nimport Tree from './scenes/Tree';\n\nexport default function App () {\n\treturn <Tree />\n}\n"],"sourceRoot":""}